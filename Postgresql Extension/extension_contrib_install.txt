all extension information on below site:- 

https://neon.com/docs/extensions/pgcrypto


Contrib package download link:- 

https://download.postgresql.org/pub/repos/yum/15/redhat/rhel-8.7-x86_64/

To see all extension:- 

SELECT * FROM pg_available_extensions;


export PG_CONFIG=/usr/lib/pgsql-15.6/bin/pg_config

--------------------------------------------------------------------------------------------------------------------------------------

https://centos.pkgs.org/7/centos-sclo-rh-x86_64/rh-postgresql13-pgaudit-1.5.0-1.el7.x86_64.rpm.html

https://gist.github.com/joelonsql/e5aa27f8cc9bd22b8999b7de8aee9d47 -------------  1000+ extension pacakge

--if you install postgresql through rpm package than use following website to install extension. 

1.https://ubuntu.pkgs.org/22.04/ubuntu-universe-amd64/postgresql-15-partman_4.6.0-1_amd64.deb.html


pg_cron and pg_partman

git clone https://github.com/pgpartman/pg_partman.git

git clone https://github.com/citusdata/pg_cron.git



---------------------------------------------------------------------------------------------------------------------------------------------------------
if postgersql install through rpm package:- 

extension dependency:- (pgxs.mk)

sudo yum install -y centos-release-scl

sudo yum install -y llvm-toolset-7

sudo yum install -y postgresql15-devel-15.3


export PATH=$PATH:/usr/pgsql-15/bin

---------------------------------------------------------------------------------------------------------------------------------------------------------
install pg_cron extension:-


1. go path & install pg_cron package:- 

cd /data/postgresql/postgresql-15.6/contrib

git clone https://github.com/citusdata/pg_cron.git

2. change permission:-

chown -R postgres:postgres pg_cron

3. switch user & configure pg_cron:- 

su - postgres

cd /data/postgresql/postgresql-15.6/contrib/pg_cron

make
make install

4.add parameter on postgresql config file:- 

vi postgresql.conf

shared_preload_libraries = 'pg_cron,pg_partman_bgw'

#-----------------------------------------------------------------------------
#PG_CRON
#-----------------------------------------------------------------------------
cron.timezone='Asia/Kolkata'
#cron.log_statement = 'all'
#cron.database_name = 'postgres'
#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

5.restart postgres service:- 

systemctl restart postgersql.service


6.create extension:- 


create extension pg_cron;


-----------------------------------------------------------------------------------------------------------------------------------------

2. uuid extension :- 

1.configure :- 

ubantu:- 
sudo apt-get update
sudo apt-get install uuid-dev libossp-uuid-dev build-essential -----ubantu

centos or redhat:- 

sudo yum install libuuid-devel
sudo yum install ossp-uuid-devel


cd /path/to/postgresql-15.6

./configure prefix=/usr/lib/pgsql-15.6 --with-uuid=e2fs  # Or --with-uuid=ossp if using OSSP UUID

2. install:- 

cd /data/postgresql-15/postgresql-15.6/contrib/uuid-ossp

make && make install

3.create extension:- 
create extension "uuid-ossp";


---------------------------------------------------------------------------------------------------------------------------------------------------

3.pg_partman:- 

1. go path & install pg_partman package:- 

cd /data/postgresql/postgresql-15.6/contrib

git clone https://github.com/pgpartman/pg_partman.git

2. change permission:-

chown -R postgres:postgres pg_partman

3. switch user & configure pg_partman:- 

su - postgres

cd /data/postgresql/postgresql-15.6/contrib/pg_partman

make
make install

4.create extension:- 

create extension pg_partman;


------------------------------------------------------------------------------------------------------------------------------------------------------------------

3.pg_financial:- (if install postgresql through rpm package)


1.extension dependency:- (pgxs.mk) -------------------- centos
 
sudo yum install -y centos-release-scl
 
sudo yum install -y llvm-toolset-7

sudo yum install -y postgresql15-devel-15.3

yum install gcc 


2. download & configure:- 
git clone https://github.com/intgr/pg_financial

chown -R postgres:postgres pg_financial

export PATH=$PATH:/usr/pgsql-15/bin

make & make install

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

4.pgaudit:- 

https://github.com/pgaudit/pgaudit/releases

For postgresql-15:-

1.go to contrib directory and install pgaudit package :- 

wget https://github.com/pgaudit/pgaudit/releases/tag/1.7.0

unzip 1.7.0.zip

2.got pgaudit directory and make && make install command excute:- 

cd pgaudit-1.7.0

make && make install


3.add pgaudit parameter in postgresql.conf file:- 

shared_preload_libraries = 'pgaudit'    # (change requires restart)

log_destination = 'stderr'

Enable session logging for all DML and DDL and log all relations in DML statements:
pgaudit.log = 'all' ----------------------(DML,DDL,ALL)
#pgaudit.log='ddl,write'
pgaudit.log_relation = on

Enable session logging for all commands except MISC and raise audit log messages as NOTICE:
set pgaudit.log = 'all, -misc';
set pgaudit.log_level = notice;

log_connections = on
log_disconnections = on
log_line_prefix = '<%m:%r:%u@%d:[%p]:>'

4.create extension:- 

create extension pgaudit;

5.To set log on postgresql.conf (help below commaand):-

https://github.com/pgaudit/pgaudit#session-audit-logging

https://www.pythian.com/blog/technical-track/12-essential-steps-for-a-comprehensive-postgresql-audit
 
6.The by-default value of log is none. You can set pgaudit.log using the below parameters:-

1.READ: SELECT and COPY when the source is a relation or a query.
2.WRITE: INSERT, UPDATE, DELETE, TRUNCATE, and COPY when the destination is a relation.
3.FUNCTION: Function calls and DO blocks.
4.ROLE: Statements related to roles and privileges: GRANT, REVOKE, CREATE/ALTER/DROP ROLE.
5.DDL: All DDL that is not included in the ROLE class.
6.MISC: Miscellaneous commands, e.g., DISCARD, FETCH, CHECKPOINT, VACUUM, SET.
7.MISC_SET: Miscellaneous SET commands, e.g., SET ROLE.
8.ALL: Include all of the above.









