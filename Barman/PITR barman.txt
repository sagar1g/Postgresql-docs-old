==== STEP 1: Full Backup ====
# Start the backup for the first time using the rsync-concurrent method.
postgres@cdbtestdcserver3:/BARMAN/backup/base$ barman backup pg_server

# The backup process will start, and WAL segments will be processed.
# The final result will show the backup completion with size and WAL segments.

==== STEP 2: Creating and Querying the Database ====
# Create a test database and a table named "dummy_table".
postgres=# create database test;

# Connect to the "test" database and create a table.
postgres=# \c test
test=# CREATE TABLE dummy_table (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    age INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE
);

# Query the table to count the number of rows.
test=# select count(*) from dummy_table;

==== STEP 3: Incremental Backup (Link) ====
# Reuse an existing backup by creating a new backup with the "link" option.
postgres@cdbtestdcserver3:/BARMAN/backup/base$ barman backup reuse-backup=link pg_server

# The backup starts using the same rsync method, and the deduplication ratio is applied.

==== STEP 4: Dropping the Table ====
# Drop the "dummy_table" from the test database.
test=# drop table dummy_table;

==== STEP 5: Another Incremental Backup (Link) ====
# Create another backup by Incremental the previous one with the "link" option.
postgres@cdbtestdcserver3:/BARMAN/backup/base$ barman backup --reuse-backup=link pg_server

# The backup process is similar, and it will show the deduplication ratio and WAL segment information.

==== STEP 6: Incremental Backup Confirmation ====
# A final Incremental backup (link option) is created.
postgres@cdbtestdcserver3:/BARMAN/backup/base$ barman backup --reuse-backup=link pg_server

# The process completes in a similar manner as previous steps.

==== STEP 7: Listing Backups ====
# List the backup directories to see the created backups.
postgres@cdbtestdcserver3:/BARMAN/backup/base$ ls -lrth

# This will show the created backup directories with timestamps.

==== STEP 8: Recovery from Backup ====
# Start the recovery process from the backup taken at 20250218T020028.
postgres@cdbtestdcserver3:/BARMAN/backup/base$ barman recover --target-time "2025-02-18 02:05:21" pg_server 20250218T020028 /abcd

# The recovery will restore the server to the desired state at the specified target time.

==== STEP 9: Verifying the Recovery ====
# After the recovery, connect to the PostgreSQL server and confirm that the WAL replay is resumed.
postgres@cdbtestdcserver3:/abcd/log$ psql -p 5555

# Use the pg_wal_replay_resume function to resume the WAL replay.
postgres=# SELECT pg_wal_replay_resume();

# Confirm the server is in recovery mode.
postgres=# SELECT pg_is_in_recovery();
